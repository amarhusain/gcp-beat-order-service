apiVersion: apps/v1
kind: Deployment
metadata:
  name: gcp-beat-order-service
spec:
  replicas: 1 # You can adjust this to scale your application
  selector:
    matchLabels:
      app: gcp-beat-order-service
  template:
    metadata:
      labels:
        app: gcp-beat-order-service
    spec:
      # Use the Kubernetes Service Account bound to your GCP service account
      serviceAccountName: gkesa-cloudsql
      containers:
        # Your backend application container
        - name: gcp-beat-order-service
          image: asia-east1-docker.pkg.dev/beat-test-468617/gcp-beat-order-artifact-repo/gcp-beat-order-service-image:$COMMIT_SHA
          ports:
            - containerPort: 8082 # The port your Spring Boot app is listening on
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: prod
            # The application will use these environment variables for database credentials.
            # These values are injected at runtime from a Kubernetes Secret.
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://127.0.0.1:5432/beat_test_db
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password

        # The Cloud SQL Auth proxy sidecar container
        - name: cloud-sql-proxy
          image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.8.0
          args:
            - "--port=5432"
            - "--private-ip"
            - "beat-test-468617:asia-east1:gcp-beat-postgresql-instance-id"
          securityContext:
             runAsNonRoot: true
          # The proxy will use a service account with the appropriate Cloud SQL Client IAM role.
---
apiVersion: v1
kind: Service
metadata:
  name: gcp-beat-order-service
spec:
  type: LoadBalancer # Creates a public IP address to access your app
  selector:
    app: gcp-beat-order-service
  ports:
    - protocol: TCP
      port: 80 # External port for the load balancer
      targetPort: 8082 # Internal port of the container